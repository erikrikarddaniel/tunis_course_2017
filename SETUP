Tunis 2017 course: Instructions for how to set up a test computer
=================================================================

This document describes how to set up a computer so that prerequisites for
Daniel's practical can be tested. During the practical, students will perform
these steps themselves, so few programs need to be installed prior to the
course.

Preinstalled prerequisites
--------------------------

I assume a Linux computer with:

* Git

* R 3.4.0 or higher (earlier version in the 3.x series might work, but I'm
  working on 3.4.2 so there's no guarantee)

* Rstudio 1.1 (1.0 certainly works, but there are some nice new features in 1.1
  that makes it worth the trouble to install 1.1)

What needs to be done test that computers can handle my practical
-----------------------------------------------------------------

--> Install DADA2

Data in the form of 21 pairs of gzipped, subsampled fastq files. These will be
"cleaned" with DADA2, an R library that builds probabilistic models of errors in
sequences which can be applied to correct sequencing errors. DADA2 is an R
library and not command line tools, so it needs to be installed, see:

  https://bioconductor.org/packages/release/bioc/html/dada2.html

--> Install Daniel's wrapper scripts

I have written wrapper R scripts to make it easier to run DADA2 (this will be
one option during the practical, the other to follow instructions at the DADA2
web site). These can be downloaded from GitHub using the following commands
(note: the first three are only to organize things like I like it):

  $ cd ~
  $ mkdir dev
  $ cd dev
  $ git clone https://github.com/erikrikarddaniel/eemisdada2.git

I prefer to have all my github repos under a "dev" directory in my home
directory, but that's a matter of taste.

The wrapper scripts are in the src/R subdirectory of the repository. To make
sure they are runnable from the command line, *either* add this directory (the
src/R subdirectory of the repo) to your PATH (see below example) or create
symbolic links in a directory in your PATH, e.g. /usr/local/bin or ~/bin
(preferred).

  $ export PATH=$PATH:~/dev/eemisdada2/src/R

(If you use the PATH method, make sure to add the command to .bash_profile or
whatever initialization file you use.)

--> Clone biomakefiles

I use "make" to automate program execution and have for this purpose written a
library of makefiles with useful recipes. This can also be cloned from my github
account:

  $ cd ~/dev
  $ git clone https://github.com/erikrikarddaniel/biomakefiles.git

--> The data

When distributed, this 
